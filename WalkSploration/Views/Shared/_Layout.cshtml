<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title - walksploration</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

</head>
<body>
    <div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                @Html.ActionLink("walksploration", "Index", "Home", new { area = "" }, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Home", "Index", "Home")</li>
                    <li>@Html.ActionLink("About", "Index", "Home")</li>
                    <li>@Html.ActionLink("Contact", "Index", "Home")</li>
                </ul>
                @Html.Partial("_LoginPartial")
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>Walksploration - a Genisys Application &copy; @DateTime.Now.Year</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
</body>
</html>

@*Including Src code for jquery*@
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
@*Including Src code for ajax/googleapis*@
<script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.11.1/jquery-ui.min.js"></script>
@*Including Src Google API Key*@
<script type="text/javascript" src="http://maps.google.com/maps/api/js?key=AIzaSyBfGAYRk9n_e_kfTXh3RDqvW4FLmT8W0D4&sensor=false"></script>

<script type="text/javascript">

    $(document).ready(function () {
        initializeMap();
    });


    // Initialize Global Variables
    var map;                                        // the actual map image to display
    //var mapOptions;                               // holds the center, zoom and mapTypeId: bits
    var geocoder = new google.maps.Geocoder();      // the function that will take an address and return geocoordinates
    var position;                                   // creates the position variable
    //var latlng;
    var image = {                                   // Creates custom Map Pin Image and location relative to info window
        url: "/Images/sneakerMarker.png",
        anchor: new google.maps.Point(20, 15)
    };
    var marker;                                     // Initializes marker object

    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();

    // Initalize Map without Geolocation
    //function initializeMap() {
    //    latlng = new google.maps.LatLng(42.3347, -83.0497);
    //    mapOptions = {
    //        center: latlng,
    //        zoom: 16,
    //        mapTypeId: google.maps.MapTypeId.ROADMAP
    //    };
    //    map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);
    //    // CUSTOM marker
    //    marker = new google.maps.Marker({
    //        position: latlng,
    //        map: map,
    //        title: 'Grand Circus',
    //        icon: image
    //        //var latlng = new google.maps.LatLng(42.3347, -83.0497);
    //    });
    //    geocoder = new google.maps.Geocoder();
    //    // Adds a listener for the click event to place pin at Start Locat
    //    document.getElementById('submitWalk').addEventListener('click', function () {
    //        geocodeAddress(geocoder, map);
    //    });
    // }

    // Initalize Map with Geolocation
    function initializeMap() {

        // Creates the variable map, with the default lat and lng for Grand Circus
        map = new google.maps.Map(document.getElementById('map_canvas'), {
            center: { lat: 42.3347, lng: -83.0497 },
            zoom: 16
        });

        var infoWindow = new google.maps.InfoWindow({ map: map });

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            // "Hey Geolocation! Please go find the current position and set the current lat and lng to the lat and lng vars."
            navigator.geolocation.getCurrentPosition(function (position) {
                position = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };

                // custom shoe marker
                marker = new google.maps.Marker({
                    map: map,
                    position: position,
                    icon: image,
                    animation: google.maps.Animation.DROP
                });

                //// Makes the Shoe bounce
                //marker.addListener('click', toggleBounce);

                infoWindow.setPosition(position);

                infoWindow.setContent('Howdy, walker!');
                map.setCenter(position);
                map.addMarker(event.position, map);
            },

            function () {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        }
        else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
    }

    // Default location if Geolocation is not Available
    function handleLocationError(browserHasGeolocation, infoWindow, position) {
        infoWindow.setPosition(position);
        infoWindow.setContent(browserHasGeolocation ?
                              'Howdy, Grand Circus!' :
                              'Error: Your browser doesn\'t support geolocation.');
        marker = new google.maps.Marker({
            map: map,
            position: position,
            icon: image,
            animation: google.maps.Animation.DROP
        });
    }

    // Optional Bounce animation for Map Pin
    function toggleBounce() {
        if (marker.getAnimation() !== null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }

    // Adds a listener for the click event to place pin at Start Locat
    document.getElementById('submitWalk').addEventListener('click', function () {
        geocodeAddress(geocoder, map);
    });

    function geocodeAddress(geocoder, resultsMap) {
        var address = document.getElementById('address').value;
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status === google.maps.GeocoderStatus.OK) {
                resultsMap.setCenter(results[0].geometry.location);
                marker = new google.maps.Marker({
                    map: resultsMap,
                    position: results[0].geometry.location,
                    icon: image
                });
            } else {
                alert('Geocode was not successful for the following reason: ' + status);
            }
        });
    }

    function searchAddress() {
        geocoder = new google.maps.Geocoder({ 'address': address }, function callback(results, status) {

            //map.geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {
                console.log(results[0]);
                var lat = results[0].geometry.location.lat();
                var lng = results[0].geometry.location.lng();
            }
        })
    };

    function callback(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
            var place = results[i];

            var lat = results[0].geometry.location.lat();
            var lng = results[0].geometry.location.lng();
        }

    }


</script>
