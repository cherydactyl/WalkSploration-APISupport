@{
    ViewBag.Title = "Walksploration";
}

<div class="jumbotron">
    <img src="~/Images/walksplorationBanner.png" style="width : 100% " />
</div>
<div class="container">
    <div class="col-md-12">
        <h2>Have a minute?</h2>
        <h4 style="padding-left: 20px;">Explore your world! Enter your available time, and we will send you to a new, exciting point of interest for you to explore.</h4>
    </div>
</div>

@*Commented out on 8.30.15 to see if processing through the home controller would be more efficient*@
@*<div>
        <p>
            Current location <input type="text" id="address" name="address" size="8" value="" />
            Available time <input type="range" id="availableTime" name="availableTime" max="60" min="0" value="10" />
            <input type="button" id="submitWalk" value="Let's Explore!" onclick="searchAddress("","");" />
        </p>
    </div>*@



@*<div id="GeoLocationEnabled">
    <div style=" width: 40%; margin:0 auto;">
        <p>
            Current Location <input type="text" id="address" name="address" size="8" value="" />
            <input type="button" id="submitWalk" value="Let's Explore!" onclick="searchAddress(this.value);" />
        </p><br />
    </div>
</div>*@



<div id="timeSlider" style="background:#ffffff; border: 1px solid #000000; width: 40%; margin:0 auto;">
    <div style="padding: 0px 12px;">
        <p>How long do you have for your walk?</p>
        <input type="range" min="1" max="60" value="0" step="1" onchange="showValue(this.value)" /><br />

        <p><span class="glyphicon glyphicon-time"></span>   <span id="time-display">0</span> mins</p>
    </div>
</div>

@*<h3 id="map_canvas" style="max-width: 1140px; height: 350px; border: 4px solid #5E5454;"></h3>*@






<input id="pac-input" class="controls" type="text" placeholder="Enter a location" >

<div id="type-selector" class="controls">
    <input type="radio" name="type" id="changetype-all" checked="checked">
    <label for="changetype-all">All</label>

    <input type="radio" name="type" id="changetype-address">
    <label for="changetype-address">Addresses</label>


</div>
<div id="map" style="max-width: 1140px; height: 350px; border: 4px solid #5E5454;"></div>



<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>
<div class="row">
    <h2 id="contact" name="#About">About</h2>
</div>
<div class="row">
    <h2 id="contact">Contact Us</h2>
</div>

<script>

function initMap() {
  var map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: -33.8688, lng: 151.2195},
    zoom: 13
  });

  var input = (document.getElementById('pac-input'));


  var types = (ENTER POI TYPES HERE);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
  map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

  var autocomplete = new google.maps.places.Autocomplete(input);
  autocomplete.bindTo('bounds', map);

  var infowindow = new google.maps.InfoWindow();
  var marker = new google.maps.Marker({
    map: map,
    anchorPoint: new google.maps.Point(0, -29)
  });

  autocomplete.addListener('place_changed', function() {
    infowindow.close();
    marker.setVisible(false);
    var place = autocomplete.getPlace();
    if (!place.geometry) {
      window.alert("Autocomplete's returned place contains no geometry");
      return;
    }

     //If the place has a geometry, then present it on a map.
    if (place.geometry.viewport) {
      map.fitBounds(place.geometry.viewport);
    } else {
      map.setCenter(place.geometry.location);
      map.setZoom(17);  // Why 17? Because it looks good.
    }
    marker.setIcon(({
      url: place.icon,
      size: new google.maps.Size(71, 71),
      origin: new google.maps.Point(0, 0),
      anchor: new google.maps.Point(17, 34),
      scaledSize: new google.maps.Size(35, 35)
    }));
    marker.setPosition(place.geometry.location);
    marker.setVisible(true);

    var address = '';
    if (place.address_components) {
      address = [
        (place.address_components[0] && place.address_components[0].short_name || ''),
        (place.address_components[1] && place.address_components[1].short_name || ''),
        (place.address_components[2] && place.address_components[2].short_name || '')
      ].join(' ');
    }

    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
    infowindow.open(map, marker);
    });

    // Sets a listener on a radio button to change the filter type on Places
    // Autocomplete.
    function setupClickListener(id, types) {
    var radioButton = document.getElementById(id);
    radioButton.addEventListener('click', function() {
    autocomplete.setTypes(types);
    });
    }

    setupClickListener('changetype-all', []);
    setupClickListener('changetype-address', ['address']);
    setupClickListener('changetype-establishment', ['establishment']);
    setupClickListener('changetype-geocode', ['geocode']);
    }
    </script>

    <script src="https://maps.googleapis.com/maps/api/js?signed_in=true&libraries=places&callback=initMap"
            async defer></script>
