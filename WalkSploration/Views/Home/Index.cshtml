@{
    ViewBag.Title = "Walksploration";
}

<div class="jumbotron">
    <h1>Walksploration</h1>
</div>
<div>
    <h2>Starting Location</h2>
    <input type="text" id="place_ID" size="20" />
    <input type="button" value="Search" onclick="find();" />
    <p id="location" />
</div>

@*Google Maps Places Library javascript ref*@
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?libraries=places"></script>

@*If you do not have a Google Maps API for Work agreement covering the 
Geolocation API, you may use a free quota of 100 requests per 24 hours for 
testing and development only. To do so, you must first enable billing in the 
APIs Console. Your account will not be charged for use of this free 
Geolocation API quota.*@

@* Google Geolocation API with Key*@
@*https://www.googleapis.com/geolocation/v1/geolocate?key=AIzaSyBfGAYRk9n_e_kfTXh3RDqvW4FLmT8W0D4*@

<script>
    var uri = 'api/location';

    $(document).ready(function () {
      // Send an AJAX request
      $.getJSON(apiuri)
          .done(function (data) {
            // On success, 'data' contains a list of locations.
            $.each(data, function (key, item) {
              // Add a list item for the location.
              $('<li>', { text: formatItem(item) }).appendTo($('#locations'));
            });
          });
    });

    function formatItem(item) {
        return item.Name + item.GeoCoordinate;
    }

    function find() {
        var id = $('#place_ID').val();
      $.getJSON(uri + '/' + id)
          .done(function (data) {
            $('#location').text(formatItem(data));
          })
          .fail(function (jqXHR, textStatus, err) {
            $('#location').text('Error: ' + err);
          });
    }
</script>

<div>
    <script type="text/javascript">
var map;
var infowindow;

// Initializer for map with no user input. Centers over Grand Circus 

function initialize()
{
    var myLatLng = new google.maps.LatLng(42.3347, -83.0497);

    map = new google.maps.Map(document.getElementById('map'), {
        center: myLatLng,
        zoom: 15
    });

    infowindow = new google.maps.InfoWindow();

    var service = new google.maps.places.PlacesService(map);
    service.nearbySearch(request, callback);

    var request = {
        location: myLatLng,
        radius: '500',
        types: ['store']
    };

}


function initialize() {
    var myLatLng = new google.maps.LatLng(42.3347, -83.0497);

    var map = new google.maps.Map(document.getElementById('map'), {
        center: myLatLng,
        zoom: 16
    });

    var infowindow = new google.maps.InfoWindow({map: map});

    // Try HTML5 geolocation.
    if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition(function(position) {
            var pos = {
                lat: position.coords.latitude,
                lng: position.coords.longitude
            };

            infoWindow.setPosition(pos);
            infoWindow.setContent('Location found.');
            map.setCenter(pos);
        }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
        });
    } else {
        // Browser doesn't support Geolocation
        handleLocationError(false, infoWindow, map.getCenter());
    }
}
function handleLocationError(browserHasGeolocation, infoWindow, pos) {
    infoWindow.setPosition(pos);
    infoWindow.setContent(browserHasGeolocation ?
                          'Error: The Geolocation service failed.' :
                          'Error: Your browser doesn\'t support geolocation.');

}



function callback(results, status) {
    if (status == google.maps.places.PlacesServiceStatus.OK) {
        for (var i = 0; i < results.length; i++) {
            var place = results[i];
            createMarker(results[i]);
        }
    }
}
function createMarker(places)
{
    var bounds = new google.maps.LatLngBounds();
    var placesList = document.getElementById('places');
    for (var i = 0, place; place = places[i]; i++)
    {
        var image = {
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(25, 25)
        };
        var marker = new google.maps.Marker({
            map: map,
            icon: image,
            title: place.name,
            //position: place.geometry.location
            position: myLatLng
        });
        placesList.innerHTML += '<li>' + place.name + '</li>';
        bounds.extend(place.geometry.location);
    }
    map.fitBounds(bounds);
}
google.maps.event.addDomListener(window, 'load', initialize);
    </script>
    <div id="map" style="width: 1140px; height: 350px; border: 5px solid #5E5454;">
    </div>
</div>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?signed_in=true&callback=initMap"></script>

<div class="row">
    <div class="col-md-4">
        <h2>Getting started</h2>
        <p>
            ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
            enables a clean separation of concerns and gives you full control over markup
            for enjoyable, agile development.
        </p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
    </div>
</div>